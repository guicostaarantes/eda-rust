apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  health-my-app.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "interval": "2s",
          "maxDataPoints": 1000,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": false,
            "text": {}
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "editorMode": "code",
              "expr": "rate(container_cpu_usage_seconds_total{namespace=\"my-app\",container!=\"\"}[1m])",
              "key": "Q-55497b80-3a0f-4f4d-ac86-59f60a4777ac-0",
              "legendFormat": "{{container}}",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "CPU usage of my-app containers",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "mbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 2,
          "interval": "2s",
          "maxDataPoints": 1000,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": false,
            "text": {}
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "editorMode": "code",
              "expr": "container_memory_usage_bytes{namespace=\"my-app\",container!=\"\"} / 2^20",
              "key": "Q-55497b80-3a0f-4f4d-ac86-59f60a4777ac-0",
              "legendFormat": "{{container}}",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Memory consumption of my-app containers",
          "type": "gauge"
        }
      ],
      "refresh": "5s",
      "schemaVersion": 38,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-1m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Health of my-app",
      "uid": "d7934e07-ad2c-46e9-b71c-85af4370280b",
      "version": 1,
      "weekStart": ""
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
data:
  default.yaml: |-
    apiVersion: 1
    providers:
      - name: Default
        folder: Defined by Kubernetes
        type: file
        options:
          path:
            /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources-config
data:
  loki.yaml: |-
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: "http://loki-service:3100"
        version: 1
        isDefault: true
        jsonData:
          {}
      - name: Prometheus
        type: prometheus
        access: proxy
        url: "http://prometheus-server:80"
        jsonData:
          {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: grafana-deployment
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: grafana-deployment
    spec:
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana-app
          image: grafana/grafana:10.0.3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: grafana-config-volume
              mountPath: /etc/grafana
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards-storage
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-dashboards-volume
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-datasources-volume
              mountPath: /etc/grafana/provisioning/datasources
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-password
                  key: grafana.pwd
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: grafana-config-volume
          configMap:
            name: grafana-config
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-dashboards-storage
          configMap:
            name: grafana-dashboards
        - name: grafana-dashboards-volume
          configMap:
            name: grafana-dashboards-config
        - name: grafana-datasources-volume
          configMap:
            name: grafana-datasources-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  selector:
    name: grafana-deployment
  ports:
    - protocol: TCP
      port: 3000
