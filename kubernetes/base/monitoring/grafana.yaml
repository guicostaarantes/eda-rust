apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources-config
data:
  loki.yaml: |-
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: "http://loki-service:3100"
        version: 1
        isDefault: true
        jsonData:
          {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: grafana-deployment
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: grafana-deployment
    spec:
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana-app
          image: grafana/grafana:10.0.3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: grafana-config-volume
              mountPath: /etc/grafana
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards-volume
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-datasources-volume
              mountPath: /etc/grafana/provisioning/datasources
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-password
                  key: grafana.pwd
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: grafana-config-volume
          configMap:
            name: grafana-config
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-dashboards-volume
          emptyDir: {}
        - name: grafana-datasources-volume
          configMap:
            name: grafana-datasources-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: ClusterIP
  selector:
    name: grafana-deployment
  ports:
    - protocol: TCP
      port: 3000
