kind: ConfigMap
metadata:
  name: kafka-config
apiVersion: v1
data:
  init.sh: |-
    #!/bin/bash
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic astronaut_created --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic astronaut_updated --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic mission_created --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic mission_updated --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic crew_member_added --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic crew_member_removed --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic refresh_token_created --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists && \
    /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka-service:9092 --create --topic refresh_token_revoked --partitions 1 --replication-factor 1 --config cleanup.policy=compact --if-not-exists
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-config
spec:
  backoffLimit: 4
  ttlSecondsAfterFinished: 60
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: kafka-init
        image: bitnami/kafka:3.5
        volumeMounts:
        - name: kafka-config
          mountPath: /etc/scripts
        command: ['/bin/bash', '/etc/scripts/init-script.sh']
      volumes:
      - name: kafka-config
        configMap:
          name: kafka-config
          items:
          - key: init.sh
            path: init-script.sh
