type Astronaut @key(fields: "id") {
	id: ID!
	name: String!
	age: String!
}


input CreateAstronautInput {
	name: String!
	password: String!
	birthDate: DateTime!
}

"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime




type Mutation {
	createAstronaut(input: CreateAstronautInput!): String!
	updateAstronaut(id: String!, input: UpdateAstronautInput!): String!
}

type Query {
	astronaut(id: String!): Astronaut!
}



input UpdateAstronautInput {
	name: String
	password: String
	birthDate: DateTime
}

extend schema @link(
	url: "https://specs.apollo.dev/federation/v2.1",
	import: ["@key", "@tag", "@shareable", "@inaccessible", "@override", "@external", "@provides", "@requires"]
)
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

