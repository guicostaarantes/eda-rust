schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type Astronaut
  @join__type(graph: ASTRONAUTS, key: "id")
  @join__type(graph: MISSIONS, key: "id")
{
  id: ID!
  name: String! @join__field(graph: ASTRONAUTS)
  age: String! @join__field(graph: ASTRONAUTS)
  participantOf: [Mission!]! @join__field(graph: MISSIONS)
}

input AstronautCredentialsInput
  @join__type(graph: AUTH)
{
  name: String!
  password: String!
}

input CreateAstronautInput
  @join__type(graph: ASTRONAUTS)
{
  name: String!
  password: String!
  birthDate: DateTime!
}

input CreateMissionInput
  @join__type(graph: MISSIONS)
{
  name: String!
  startDate: DateTime!
}

"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime
  @join__type(graph: ASTRONAUTS)
  @join__type(graph: MISSIONS)

scalar join__FieldSet

enum join__Graph {
  ASTRONAUTS @join__graph(name: "astronauts", url: "http://astronauts-msvc:8000")
  AUTH @join__graph(name: "auth", url: "http://auth-msvc:8000")
  MISSIONS @join__graph(name: "missions", url: "http://missions-msvc:8000")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Mission
  @join__type(graph: MISSIONS)
{
  id: ID!
  name: String!
  duration: String!
  crew: [Astronaut!]!
}

type Mutation
  @join__type(graph: ASTRONAUTS)
  @join__type(graph: AUTH)
  @join__type(graph: MISSIONS)
{
  createAstronaut(input: CreateAstronautInput!): String! @join__field(graph: ASTRONAUTS)
  updateAstronaut(id: String!, input: UpdateAstronautInput!): String! @join__field(graph: ASTRONAUTS)
  exchangeAstronautCredentialsForTokenPair(input: AstronautCredentialsInput!): TokenPair! @join__field(graph: AUTH)
  refreshTokenPair: TokenPair! @join__field(graph: AUTH)
  invalidateRefreshToken: String! @join__field(graph: AUTH)
  createMission(input: CreateMissionInput!): String! @join__field(graph: MISSIONS)
  updateMission(id: String!, input: UpdateMissionInput!): String! @join__field(graph: MISSIONS)
}

type Query
  @join__type(graph: ASTRONAUTS)
  @join__type(graph: AUTH)
  @join__type(graph: MISSIONS)
{
  astronaut(id: String!): Astronaut! @join__field(graph: ASTRONAUTS)
  noop: String! @join__field(graph: AUTH)
  mission(id: String!): Mission! @join__field(graph: MISSIONS)
}

type TokenPair
  @join__type(graph: AUTH)
{
  refreshToken: String!
  accessToken: String!
}

input UpdateAstronautInput
  @join__type(graph: ASTRONAUTS)
{
  name: String
  password: String
  birthDate: DateTime
}

input UpdateMissionInput
  @join__type(graph: MISSIONS)
{
  name: String
  startDate: DateTime
}
